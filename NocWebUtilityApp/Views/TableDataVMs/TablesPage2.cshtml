@*
* OnSolve
* Author: Daniel Jackson
* NocWebUtility Application
* Created: 03/22/2017
* Last Edit: 09/22/2017
* Description: Second view page for displaying table data.
*
*@
@model NocWebUtilityApp.Models.TableDataVM
@{
	ViewBag.Title = "NOC Table Page 2";
}
@section scripts{
	<link href="~/css/serverModal.styles.css" rel="stylesheet" />
	<script src="~/js/serverModal.Controller.js"></script>
}

<div class="container-fluid">
	<div class="row">
		@*TODO: ADD serverGroup code.*@
		<div class="col-md-2">
			<div class="table">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>SQL Table</th>
						</tr>
						<tr>
							<th>SQL Alias</th>
							<th>SQL Server</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.TableProducts.Where(product => product.TableNumber == 4))
						{
							<tr>
								<td class="">@item.ProductName</td>
								<td class="" productId="@item.Id" productName="@item.ProductName" serverColumn="primaryColumn">
									@(item.PrimaryProductServer != null ? item.PrimaryProductServer.ServerName : "Not Set")
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

		<div class="col-md-4">
			<div class="table">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>HORDE</th>
						</tr>
						<tr>
							<th>Horde</th>
							<th>Active Site</th>
							<th>Horde Server</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.TableProducts.Where(product => product.TableNumber == 5))
						{
							<tr>
								<td class="success">@item.ProductName</td>
								<td class="" productId="@item.Id" productName="@item.ProductName" serverColumn="primaryColumn">
									@(item.PrimaryProductServer != null ? item.PrimaryProductServer.ServerName : "Not Set")
								</td>
								<td class="label-primary" productId="@item.Id" productName="@item.ProductName" serverColumn="secondaryColumn">
									@(item.SecondaryProductServer != null ? @item.SecondaryProductServer.ServerName : "Not Set")
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

		<div class="col-md-3">
			<div class="table">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>UBER</th>
						</tr>
						<tr>
							<th>Product</th>
							<th>Uber Server</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.TableProducts.Where(product => product.TableNumber == 6))
						{
							<tr>
								<td class="success">@item.ProductName</td>
								<td class="" productId="@item.Id" productName="@item.ProductName" serverColumn="primaryColumn">
									@(item.PrimaryProductServer != null ? item.PrimaryProductServer.ServerName : "Not Set")
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

		<div class="col-md-3">
			<div class="table">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>IPAWS</th>
						</tr>
						<tr>
							<th>Server</th>
							<th>Active Site</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.TableProducts.Where(product => product.TableNumber == 7))
						{
							<tr>
								<td class="" productId="@item.Id" productName="@item.ProductName" serverColumn="primaryColumn">
									@(item.PrimaryProductServer != null ? item.PrimaryProductServer.ServerName : "Not Set")
								</td>
								<td class="label-primary" productId="@item.Id" productName="@item.ProductName" serverColumn="secondaryColumn">
									@(item.SecondaryProductServer != null ? @item.SecondaryProductServer.ServerName : "Not Set")
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<div>
	@await Component.InvokeAsync("ModalWindow")
</div>